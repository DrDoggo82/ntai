{"version":3,"sources":["components/Select.tsx","components/controllers/Sorter.tsx","components/controllers/Paginator.tsx","helpers/fetcher.ts","assets/phl.png","components/Loading.tsx","assets/phe.png","components/Error.tsx","components/Image.tsx","helpers/tags.ts","components/Card.tsx","components/View.tsx","hooks/query.ts","screens/Home.tsx","components/Appbar.tsx","components/controllers/Searchbar.tsx","screens/Search.tsx","components/Related.tsx","screens/Preview.tsx","screens/Tag.tsx","App.tsx","index.tsx"],"names":["Select","title","toggle","options","onSelect","useState","isShown","setIsShown","className","onClick","map","option","i","value","display","sortMethod","sort","Sorter","current","keyword","page","history","useHistory","location","useLocation","push","currentRoute","pathname","makePath","Paginator","total","gotoPage","pg","num","changePage","type","currentPage","parseInt","search","_key","a","fetch","res","json","console","error","doujin","id","searchByTag","related","image","url","ext","method","headers","body","JSON","stringify","Loading","full","src","ph","alt","Error","message","Image","height","width","extension","phImg","useInView","triggerOnce","ref","inView","useQuery","fetcher","enabled","data","status","group","tags","grouped","list","tag","hasOwnProperty","b","localeCompare","shortenCount","count","numLen","toString","length","toFixed","capitalize","text","charAt","toUpperCase","slice","name","Card","item","to","doujinId","thumbnail","titles","pretty","favorites","View","items","key","useQueryParams","params","query","URLSearchParams","args","get","Home","searchString","setSearchString","isNaN","onSubmit","e","preventDefault","placeholder","onChange","target","document","querySelector","doujins","numPages","Appbar","Searchbar","Search","Related","Preview","useParams","pageStyles","imgWidth","imgHeight","window","innerWidth","margin","japanese","english","Date","uploadDate","toLocaleDateString","pages","style","Tag","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea9eeed3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\ninterface SelectProps {\r\n\ttitle?: string;\r\n\ttoggle: any;\r\n\toptions: { value: string | number; display: string | number }[];\r\n\tonSelect: Function;\r\n}\r\n\r\nconst Select = ({ title, toggle, options, onSelect }: SelectProps) => {\r\n\tconst [isShown, setIsShown] = useState(false);\r\n\r\n\treturn (\r\n\t\t// event bubbling triggers onCLick on .select when backdrop is clicked\r\n\t\t<div className=\"select\" onClick={() => setIsShown(!isShown)}>\r\n\t\t\t<button className=\"toggle\">{toggle}</button>\r\n\t\t\t{isShown && (\r\n\t\t\t\t<div className=\"options-background\">\r\n\t\t\t\t\t<div className=\"options\">\r\n\t\t\t\t\t\t{title && <div className=\"title\">{title}</div>}\r\n\t\t\t\t\t\t{options.map((option, i) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tonSelect(option.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"option\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{option.display}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Select;\r\n","import { HiMenuAlt3 } from \"react-icons/hi\";\r\nimport Select from \"../Select\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst sortMethod = (sort: string | null) => {\r\n\tif (sort === \"today\") return \"Popular Today\";\r\n\tif (sort === \"week\") return \"Popular this Week\";\r\n\tif (sort === \"recent\") return \"Recent\";\r\n\treturn \"Popular all Time\";\r\n};\r\n\r\ninterface SorterProps {\r\n\tcurrent: string | null;\r\n\tpage: string | null;\r\n\tkeyword: string | null;\r\n}\r\n\r\nconst Sorter = ({ current, keyword, page }: SorterProps) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\r\n\tconst makePath = (option: string) => {\t\t\r\n\t\tconst currentRoute = location.pathname;\r\n\t\tif (!page && !keyword) return `${currentRoute}?s=${option}`;\r\n\t\tif (page && !keyword) return `${currentRoute}?p=${page}&s=${option}`;\r\n\t\tif (!page && keyword) return `${currentRoute}?k=${keyword}&s=${option}`;\r\n\t\treturn `${currentRoute}?k=${keyword}&p=${page}&s=${option}`;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"sorter\">\r\n\t\t\t<div className=\"current\">{sortMethod(current)}</div>\r\n\t\t\t<div className=\"controls\">\r\n\t\t\t\t<Select\r\n\t\t\t\t\ttitle=\"Sort by\"\r\n\t\t\t\t\t// probable refactor\r\n\t\t\t\t\ttoggle={<HiMenuAlt3 />}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ value: \"recent\", display: sortMethod(\"recent\") },\r\n\t\t\t\t\t\t{ value: \"week\", display: sortMethod(\"week\") },\r\n\t\t\t\t\t\t{ value: \"today\", display: sortMethod(\"today\") },\r\n\t\t\t\t\t\t{ value: \"all\", display: sortMethod(\"all\") },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonSelect={(option: string) => {\r\n\t\t\t\t\t\thistory.push(makePath(option));\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Sorter;\r\n","import { HiChevronLeft, HiChevronRight } from \"react-icons/hi\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\ninterface PaginatorProps {\r\n\tpage: string | null;\r\n\tsort: string | null;\r\n\tkeyword: string | null;\r\n\ttotal: string | number;\r\n}\r\n\r\nconst Paginator = ({ page, sort, keyword, total }: PaginatorProps) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\r\n\tconst makePath = (num: string | number) => {\r\n\t\tconst currentRoute = location.pathname;\r\n\t\tif (!sort && !keyword) return `${currentRoute}?p=${num}`;\r\n\t\tif (sort && !keyword) return `${currentRoute}?s=${sort}&p=${num}`;\r\n\t\tif (!sort && keyword) return `${currentRoute}?k=${keyword}&p=${num}`;\r\n\t\treturn `${currentRoute}?k=${keyword}&s=${sort}&p=${num}`;\r\n\t};\r\n\r\n\tconst gotoPage = (pg: number) => history.push(makePath(pg));\r\n\r\n\tconst changePage = (type: string | number) => {\r\n\t\tconst currentPage = parseInt(page || \"1\");\r\n\t\tif (type === \"prev\" && currentPage !== 1) return gotoPage(currentPage - 1);\r\n\t\tif (type === \"next\") return gotoPage(currentPage + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"paginator\">\r\n\t\t\t<nav>\r\n\t\t\t\t<button className=\"prev\" onClick={() => changePage(\"prev\")}>\r\n\t\t\t\t\t<HiChevronLeft />\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"current-pg\">{page || 1} of</div>\r\n        {/* onClick={() => gotoPage(+total)} */}\r\n\t\t\t\t<button className=\"last\"> \r\n\t\t\t\t\t{total}\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"next\" onClick={() => changePage(\"next\")}>\r\n\t\t\t\t\t<HiChevronRight />\r\n\t\t\t\t</button>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Paginator;\r\n","// search\r\nexport const search = async (\r\n\t_key: any,\r\n\tkeyword: string | null,\r\n\tpage: number | string | null,\r\n\tsort: string | null\r\n) => {\r\n\ttry {\r\n\t\tconst res = await fetch(\r\n\t\t\t`/api/doujins/search?keyword=${keyword || \"*\"}&page=${\r\n\t\t\t\tpage || 1\r\n\t\t\t}&sort=${sort}`\r\n\t\t);\r\n\t\treturn res.json();\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t}\r\n};\r\n\r\n// doujin\r\nexport const doujin = async (_key: any, id: string | number) => {\r\n\ttry {\r\n\t\tconst res = await fetch(`/api/doujin/${id}`);\r\n\t\treturn res.json();\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t}\r\n};\r\n\r\n// doujin by tag\r\nexport const searchByTag = async (\r\n\t_key: any,\r\n\tid: string | number,\r\n\tpage: number | string | null\r\n) => {\r\n\ttry {\r\n\t\tconst res = await fetch(`/api/doujins/tag/${id}?page=${page || 1}`);\r\n\t\treturn res.json();\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t}\r\n};\r\n\r\n// related doujin\r\nexport const related = async (_key: any, id: string | number) => {\r\n\ttry {\r\n\t\tconst res = await fetch(`/api/doujins/related/${id}`);\r\n\t\treturn res.json();\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t}\r\n};\r\n\r\nexport const image = async (_key: any, url: string, ext: string) => {\r\n\ttry {\r\n\t\tconst options = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\turl,\r\n\t\t\t\text,\r\n\t\t\t}),\r\n\t\t};\r\n\t\tconst res = await fetch(\"/api/image\", options);\r\n\t\treturn res.json();\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t}\r\n};\r\n","export default __webpack_public_path__ + \"static/media/phl.639d2f52.png\";","import ph from \"../assets/phl.png\";\r\n\r\ninterface LoadingProps {\r\n\tfull?: boolean;\r\n\timage?: boolean;\r\n}\r\n\r\nconst Loading = ({ full, image = true }: LoadingProps) => {\r\n\treturn (\r\n\t\t<div className={\"loading \" + (full && \"fullscreen\")}>\r\n\t\t\t{image && <img id=\"ph\" src={ph} alt=\"loading-placeholder\" />}\r\n\t\t\t<p className=\"text\">LOADING</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loading;\r\n","export default __webpack_public_path__ + \"static/media/phe.01cbcdb2.png\";","import ph from \"../assets/phe.png\";\r\n\r\ninterface ErrorProps {\r\n\tfull?: boolean;\r\n\tmessage: string;\r\n\timage?: boolean;\r\n}\r\nconst Error = ({ full, message, image = true }: ErrorProps) => {\r\n\treturn (\r\n\t\t<div className={\"error \" + (full && \"fullscreen\")}>\r\n\t\t\t{image && <img id=\"ph\" src={ph} alt=\"error-placeholder\" />}\r\n\t\t\t<p className=\"text\">ERROR</p>\r\n\t\t\t<p className=\"message\">{message}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Error;\r\n","import { useQuery } from \"react-query\";\r\nimport * as fetcher from \"../helpers/fetcher\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\n\r\ninterface ImageProps {\r\n\turl: string;\r\n\theight: string | number;\r\n\twidth: string | number;\r\n\textension: string;\r\n\tclassName: string;\r\n\tphImg?: boolean;\r\n}\r\nconst Image = ({\r\n\turl,\r\n\theight,\r\n\twidth,\r\n\textension,\r\n\tclassName,\r\n\tphImg = true,\r\n}: ImageProps) => {\r\n\tconst { ref, inView } = useInView({\r\n\t\ttriggerOnce: true,\r\n\t});\r\n\t// react query\r\n\tconst { data, status } = useQuery(\r\n\t\t[\"results\", url, extension],\r\n\t\tfetcher.image,\r\n\t\t{ enabled: inView }\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div ref={ref} id=\"image\" className={className}>\r\n\t\t\t{status === \"loading\" && <Loading image={phImg} />}\r\n\t\t\t{status === \"error\" && (\r\n\t\t\t\t<Error\r\n\t\t\t\t\timage={phImg}\r\n\t\t\t\t\tmessage=\"Failed to get image, check your internet connection\"\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{status === \"success\" &&\r\n\t\t\t\tdata &&\r\n\t\t\t\t(data.src ? (\r\n\t\t\t\t\t<img height={height} width={width} src={data.src} alt={data.src} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Error image={phImg} message=\"Image Corrupted\" />\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Image;\r\n","export const group = (tags: any[]) => {\r\n\tconst grouped: { [key: string]: any } = { list: [] };\r\n\tfor (const tag of tags) {\r\n\t\tif (!grouped.hasOwnProperty(tag.type)) {\r\n\t\t\tgrouped[tag.type] = [];\r\n\t\t\tgrouped.list.push(tag.type);\r\n\t\t}\r\n\t\tgrouped[tag.type].push(tag);\r\n\t}\r\n\tgrouped.list.sort((a: string, b: string) => a.localeCompare(b));\r\n\treturn grouped;\r\n};\r\n\r\nexport const shortenCount = (count: number) => {\r\n  const numLen = count.toString().length;\r\n  if (numLen > 3 && numLen < 7) {\r\n    return (count / 1000).toFixed(2) + \"k\";\r\n  } else if (numLen > 6 && numLen < 10) {\r\n    return (count / 1000000).toFixed(2) + \"m\";\r\n  } else return count;\r\n};\r\n\r\nexport const capitalize = (text: string) => {\r\n\treturn text.charAt(0).toUpperCase() + text.slice(1);\r\n};\r\n","import Image from \"./Image\";\r\nimport {\r\n\tHiHashtag,\r\n\tHiHeart,\r\n\tHiOutlineBookOpen,\r\n\tHiOutlineTag,\r\n} from \"react-icons/hi\";\r\nimport { group, capitalize } from \"../helpers/tags\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface CardProps {\r\n\titem: any;\r\n}\r\n\r\nconst tags = (tags: object[]) => {\r\n\tconst grouped = group(tags);\r\n\treturn (grouped.list as string[]).map((group, i) => (\r\n\t\t<div key={i} className=\"group\">\r\n\t\t\t<div className=\"group-title\">\r\n\t\t\t\t<HiOutlineTag /> {capitalize(group)}\r\n\t\t\t</div>\r\n\t\t\t{(grouped[group] as any[]).map((tag, i) => (\r\n\t\t\t\t<span key={i} className=\"tag\">\r\n\t\t\t\t\t{tag.name}\r\n\t\t\t\t</span>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t));\r\n};\r\n\r\nconst Card = ({ item }: CardProps) => {\r\n\treturn (\r\n\t\t<Link to={`/doujin/${item.doujinId}`} className=\"card\">\r\n\t\t\t<Image className=\"thumbnail\" {...item.thumbnail} phImg={false} />\r\n\t\t\t<section className=\"summary\">\r\n\t\t\t\t<div className=\"id\">\r\n\t\t\t\t\t<HiHashtag />\r\n\t\t\t\t\t{item.doujinId}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"title\">{item.titles.pretty}</div>\r\n\t\t\t\t<div className=\"chapters\">\r\n\t\t\t\t\t<HiOutlineBookOpen />\r\n\t\t\t\t\t{item.length}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"favorites\">\r\n\t\t\t\t\t<HiHeart />\r\n\t\t\t\t\t{item.favorites}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tags\">{tags(item.tags)}</div>\r\n\t\t\t</section>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\ninterface ViewProps {\r\n\titems: any[];\r\n}\r\n\r\nconst View = ({ items }: ViewProps) => {\r\n\treturn (\r\n\t\t<div className=\"view\">\r\n\t\t\t{items.map((item, i) => (\r\n\t\t\t\t<Card {...{ key: i, item }} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default View;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport const useQueryParams = (...args: string[]) => {\r\n\tconst location = useLocation();\r\n\tconst params = [];\r\n\tconst query = new URLSearchParams(location.search);\r\n\tfor (const key of args) {\r\n\t\tparams.push(query.get(key));\r\n\t}\r\n\treturn params;\r\n};\r\n","import { useState } from \"react\";\r\nimport { HiChevronDown, HiSearch, HiX } from \"react-icons/hi\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sorter from \"../components/controllers/Sorter\";\r\nimport Paginator from \"../components/controllers/Paginator\";\r\nimport View from \"../components/View\";\r\nimport * as fetcher from \"../helpers/fetcher\";\r\nimport { useQueryParams } from \"../hooks/query\";\r\nimport Loading from \"../components/Loading\";\r\nimport Error from \"../components/Error\";\r\n\r\nconst Home = () => {\r\n\tconst history = useHistory();\r\n\t// query params\r\n\tconst [page, sort, keyword] = useQueryParams(\"p\", \"s\", \"k\");\r\n\t// react query\r\n\tconst { data, status } = useQuery(\r\n\t\t[\"home\", keyword, page, sort],\r\n\t\tfetcher.search\r\n\t);\r\n\r\n\tconst [searchString, setSearchString] = useState(\"\");\r\n\r\n\tconst search = () => {\r\n\t\tif (isNaN(parseInt(searchString)))\r\n\t\t\treturn history.push(`/search?k=${searchString}`);\r\n\t\thistory.push(`/doujin/${parseInt(searchString)}`);\r\n\t};\r\n\r\n\tconst reset = () => {\r\n\t\tsetSearchString(\"\");\r\n\t\t(document.querySelector(\"#search input\") as HTMLInputElement).value = \"\";\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className=\"home\">\r\n\t\t\t<section className=\"landing\">\r\n\t\t\t\t<form\r\n\t\t\t\t\tid=\"search\"\r\n\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tsearch();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"eg. 177013\"\r\n\t\t\t\t\t\tonChange={(e) => setSearchString(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{searchString.length > 0 && (\r\n\t\t\t\t\t\t<button type=\"button\" className=\"reset\" onClick={reset}>\r\n\t\t\t\t\t\t\t<HiX />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</form>\r\n\t\t\t\t<button className=\"go\" onClick={search}>\r\n\t\t\t\t\t<HiSearch />\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"indicator\">\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<HiChevronDown />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t{status === \"loading\" && <Loading full={true} />}\r\n\t\t\t{status === \"error\" && (\r\n\t\t\t\t<Error\r\n\t\t\t\t\tfull={true}\r\n\t\t\t\t\tmessage=\"Failed to get doujins, check your internet connection\"\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{status === \"success\" && data && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Sorter {...{ current: sort, page, keyword }} />\r\n\t\t\t\t\t<section className=\"view-holder\">\r\n\t\t\t\t\t\t{data.doujins ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<View {...{ items: data.doujins }} />\r\n\t\t\t\t\t\t\t\t<Paginator {...{ page, sort, keyword, total: data.numPages }} />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Error message=\"Not Found\" />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import { HiMenu } from \"react-icons/hi\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst Appbar = () => {\r\n\tconst location = useLocation();\r\n\tconst query = new URLSearchParams(location.search);\r\n  const keyword = query.get(\"k\");\r\n  \r\n\treturn (\r\n\t\t<header className=\"appbar\">\r\n\t\t\t<nav>\r\n\t\t\t\t<button className=\"menu-toggle\">\r\n\t\t\t\t\t<HiMenu />\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t{/* show search breadcrumb on '/search' route */}\r\n\t\t\t\t{location.pathname === \"/search\" && (\r\n\t\t\t\t\t<div className=\"searched\">\r\n\t\t\t\t\t\t<span>{keyword || \"all\"}</span>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<Link to=\"/search\">search</Link>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t<Link to=\"/\">ntai</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Appbar;\r\n","import { useState } from \"react\";\r\nimport { HiSearch, HiX } from \"react-icons/hi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Searchbar = () => {\r\n\tconst history = useHistory();\r\n\tconst [searchString, setSearchString] = useState(\"\");\r\n\r\n\tconst search = () => {\r\n\t\tif (isNaN(parseInt(searchString)))\r\n\t\t\treturn history.push(`/search?k=${searchString}`);\r\n\t\thistory.push(`/doujin/${parseInt(searchString)}`);\r\n\t};\r\n\r\n\tconst reset = () => {\r\n\t\tsetSearchString(\"\");\r\n\t\t(document.querySelector(\".searchbar input\") as HTMLInputElement).value = \"\";\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"searchbar\">\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tsearch();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Search eg. big boobs\"\r\n\t\t\t\t\tonChange={(e) => setSearchString(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t{searchString.length > 0 && (\r\n\t\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t\t<button className=\"go\" type=\"button\" onClick={search}>\r\n\t\t\t\t\t\t\t<HiSearch />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"reset\" type=\"button\" onClick={reset}>\r\n\t\t\t\t\t\t\t<HiX />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Searchbar;\r\n","import { useQuery } from \"react-query\";\r\nimport Sorter from \"../components/controllers/Sorter\";\r\nimport Paginator from \"../components/controllers/Paginator\";\r\nimport View from \"../components/View\";\r\nimport * as fetcher from \"../helpers/fetcher\";\r\nimport Searchbar from \"../components/controllers/Searchbar\";\r\nimport { useQueryParams } from \"../hooks/query\";\r\nimport Error from \"../components/Error\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst Search = () => {\r\n\t// query params\r\n\tconst [page, sort, keyword] = useQueryParams(\"p\", \"s\", \"k\");\r\n\r\n\t// react query\r\n\tconst { data, status } = useQuery(\r\n\t\t[\"searched\", keyword, page, sort],\r\n\t\tfetcher.search\r\n\t);\r\n\r\n\treturn (\r\n\t\t<main className=\"search\">\r\n\t\t\t{status === \"loading\" && <Loading full={true} />}\r\n\t\t\t{status === \"error\" && (\r\n\t\t\t\t<Error\r\n\t\t\t\t\tfull={true}\r\n\t\t\t\t\tmessage=\"Failed to get doujins, check your internet connection\"\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{status === \"success\" && data && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Sorter {...{ current: sort, page, keyword }} />\r\n\t\t\t\t\t<Searchbar />\r\n\t\t\t\t\t<section className=\"view-holder\">\r\n\t\t\t\t\t\t{data.doujins ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<View {...{ items: data.doujins }} />\r\n\t\t\t\t\t\t\t\t<Paginator {...{ page, sort, keyword, total: data.numPages }} />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Error message=\"Not Found\" />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import { HiHashtag } from \"react-icons/hi\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as fetcher from \"../helpers/fetcher\";\r\nimport Error from \"./Error\";\r\nimport Image from \"./Image\";\r\nimport Loading from \"./Loading\";\r\n\r\ninterface RelatedProps {\r\n\tid: string | number;\r\n}\r\n\r\nconst Related = ({ id }: RelatedProps) => {\r\n\tconst { data: related, status } = useQuery([\"related\", id], fetcher.related);\r\n\r\n\treturn (\r\n\t\t<section className=\"related\">\r\n\t\t\t{status === \"loading\" && <Loading />}\r\n\t\t\t{status === \"error\" && (\r\n\t\t\t\t<Error message=\"Failed to get doujins, check your internet connection\" />\r\n\t\t\t)}\r\n\t\t\t{status === \"success\" &&\r\n\t\t\t\trelated &&\r\n\t\t\t\t(related.doujins ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"title\">Related</div>\r\n\t\t\t\t\t\t<div className=\"view\">\r\n\t\t\t\t\t\t\t{(related.doujins as any[]).map((item, i) => (\r\n\t\t\t\t\t\t\t\t<Link key={i} to={`/doujin/${item.doujinId}`} className=\"item\">\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"thumbnail\"\r\n\t\t\t\t\t\t\t\t\t\t{...item.thumbnail}\r\n\t\t\t\t\t\t\t\t\t\tphImg={false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"summary\">\r\n\t\t\t\t\t\t\t\t\t\t<HiHashtag /> {item.doujinId}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Error message=\"Not Found\" />\r\n\t\t\t\t))}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Related;\r\n","import { useQuery } from \"react-query\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport * as fetcher from \"../helpers/fetcher\";\r\nimport Image from \"../components/Image\";\r\nimport {\r\n\tHiBookOpen,\r\n\tHiHeart,\r\n\tHiOutlineBookOpen,\r\n\tHiOutlineCalendar,\r\n} from \"react-icons/hi\";\r\nimport { group, capitalize, shortenCount } from \"../helpers/tags\";\r\nimport Loading from \"../components/Loading\";\r\nimport Error from \"../components/Error\";\r\nimport Related from \"../components/Related\";\r\n\r\nconst Preview = () => {\r\n\t// route query\r\n\tconst { id } = useParams<{ id: string }>();\r\n\r\n\t// split details based on tags\r\n\tconst tags = (tags: object[]) => {\r\n\t\tconst grouped = group(tags);\r\n\t\treturn (grouped.list as string[]).map((group, i) => (\r\n\t\t\t<div key={i} className=\"group\">\r\n\t\t\t\t<div className=\"group-title\">{capitalize(group)}</div>\r\n\t\t\t\t<div className=\"tags-wrap\">\r\n\t\t\t\t\t{(grouped[group] as any[]).map((tag, i) => (\r\n\t\t\t\t\t\t<Link to={`/tag/${tag.id}/${tag.name}`} key={i} className=\"tag\">\r\n\t\t\t\t\t\t\t{tag.name}\r\n\t\t\t\t\t\t\t<span className=\"count\">{shortenCount(tag.count)}</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\r\n\t// react query\r\n\tconst { data, status } = useQuery([\"doujin\", id], fetcher.doujin);\r\n\r\n\tconst pageStyles = (imgWidth: number, imgHeight: number) => {\r\n\t\t// using pages' margin, image h/w ratio and window.innerWidth, calculate page width and height\r\n\t\t// margin horizontal = 10, vertical = 5\r\n\t\tconst margin = 10;\r\n\t\tconst width = window.innerWidth - 2 * margin;\r\n\t\tconst height = (width * imgHeight) / imgWidth;\r\n\t\treturn { width, height, margin: `${margin / 2}px ${margin}px` };\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className=\"preview\">\r\n\t\t\t{status === \"loading\" && <Loading full={true} />}\r\n\t\t\t{status === \"error\" && <Error full={true} message=\"Not Found\" />}\r\n\t\t\t{status === \"success\" && data && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{/* // details */}\r\n\t\t\t\t\t<section className=\"details\">\r\n\t\t\t\t\t\t<div className=\"cover\">\r\n\t\t\t\t\t\t\t<Image className=\"bg\" {...data.thumbnail} phImg={false} />\r\n\t\t\t\t\t\t\t<Image className=\"main\" {...data.thumbnail} phImg={false} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"content-control\">\r\n\t\t\t\t\t\t\t<div className=\"id\">{data.doujinId}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"content-container\">\r\n\t\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t\t<div className=\"titles\">\r\n\t\t\t\t\t\t\t\t\t{data.titles.pretty} / {data.titles.japanese || \"none\"} /{\" \"}\r\n\t\t\t\t\t\t\t\t\t{data.titles.english}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"date\">\r\n\t\t\t\t\t\t\t\t\t<HiOutlineCalendar />\r\n\t\t\t\t\t\t\t\t\t{new Date(data.uploadDate).toLocaleDateString()}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"chapters\">\r\n\t\t\t\t\t\t\t\t\t<HiOutlineBookOpen />\r\n\t\t\t\t\t\t\t\t\t{data.length}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"favorites\">\r\n\t\t\t\t\t\t\t\t\t<HiHeart />\r\n\t\t\t\t\t\t\t\t\t{data.favorites}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"tags\">{tags(data.tags)}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\r\n\t\t\t\t\t{/* related doujins */}\r\n\t\t\t\t\t<Related id={data.doujinId} />\r\n\r\n\t\t\t\t\t{/* // pages */}\r\n\t\t\t\t\t<div className=\"chapters-indicator\">\r\n\t\t\t\t\t\t<HiBookOpen />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<section className=\"pages\">\r\n\t\t\t\t\t\t{(data.pages as any[]).map((page, i) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tclassName=\"page\"\r\n\t\t\t\t\t\t\t\tstyle={pageStyles(page.width, page.height)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"pg-no\">\r\n\t\t\t\t\t\t\t\t\t{i + 1} of {data.length}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tclassName=\"page-image\"\r\n\t\t\t\t\t\t\t\t\t{...{\r\n\t\t\t\t\t\t\t\t\t\turl: page.url,\r\n\t\t\t\t\t\t\t\t\t\theight: page.height,\r\n\t\t\t\t\t\t\t\t\t\twidth: page.width,\r\n\t\t\t\t\t\t\t\t\t\textension: page.extension,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tphImg={false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Preview;\r\n","import { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Paginator from \"../components/controllers/Paginator\";\r\nimport Error from \"../components/Error\";\r\nimport Loading from \"../components/Loading\";\r\nimport View from \"../components/View\";\r\nimport * as fetcher from \"../helpers/fetcher\";\r\nimport { useQueryParams } from \"../hooks/query\";\r\n\r\nconst Tag = () => {\r\n\t// query params\r\n\tconst [page] = useQueryParams(\"p\");\r\n\t// more efficient way to get tag name?\r\n\tconst { id, name } = useParams<{ id: string; name: string }>();\r\n\t// react query\r\n\tconst { data, status } = useQuery([\"tagged\", id, page], fetcher.searchByTag);\r\n\r\n\treturn (\r\n\t\t<main className=\"tagged\">\r\n\t\t\t{status === \"loading\" && <Loading full={true} />}\r\n\t\t\t{status === \"error\" && (\r\n\t\t\t\t<Error\r\n\t\t\t\t\tfull={true}\r\n\t\t\t\t\tmessage=\"Failed to get doujins, check your internet connection\"\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{status === \"success\" && data && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<section className=\"tag-control\">\r\n\t\t\t\t\t\t<div className=\"selected-tag\">{name}</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className=\"view-holder\">\r\n\t\t\t\t\t\t{data.doujins ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<View {...{ items: data.doujins }} />\r\n\t\t\t\t\t\t\t\t<Paginator\r\n\t\t\t\t\t\t\t\t\t{...{ page, sort: null, keyword: null, total: data.numPages }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Error message=\"Not Found\" />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Tag;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./screens/Home\";\nimport Appbar from \"./components/Appbar\";\nimport Search from \"./screens/Search\";\nimport Preview from \"./screens/Preview\";\nimport Tag from \"./screens/Tag\";\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Appbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/search\" component={Search} />\n\t\t\t\t\t<Route exact path=\"/tag/:id/:name\" component={Tag} />\n\t\t\t\t\t<Route exact path=\"/doujin/:id\" component={Preview} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}